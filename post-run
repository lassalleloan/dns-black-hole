#!/bin/sh -u
# -u: Treat unset variables as an error when performing parameter expansion.
# If expansion is attempted on an unset interactive, exits with a non-zero status.
#
# Process executed after application manager execution
#
# author: Loan Lassalle <https://github.com/lassalleloan>

# Default verbosity level
VERBOSITY=1

# Display a banner
banner() {
    printf "\n"
    printf "Post-run\n"
}

# Usage of the script
usage() {
  printf "Usage: post-run [--verbosity (0 | 1 | 2)]\n"
  printf "\n"
  printf "Process executed after run-app execution\n"
  printf "\n"
  printf "Version: 1.0.0, build deadbeef\n"
  printf "\n"
  printf "Author:\n"
  printf "  Loan Lassalle - <https://github.com/lassalleloan>\n"
  printf "\n"
  printf "Options:\n"
  printf "  -v, --verbosity (0 | 1 | 2)       Level of verbosity: no ouput, step information, interactive\n"
  printf "  -h, --help                        Help on how to use this script\n"
}

# Create a hard link to /etc/hosts of local machine
hard_link() {
    local verbosity="$1"

    if [ "$verbosity" -ne 0 ]; then
        echo "Creation of hard link to /etc/hosts of local machine"
    fi

    is_hard_link=$(stat -f "%l" /etc/hosts)
    if [ is_hard_link -le 1 ]; then
        sudo ln -f dns-black-hole/src/hosts /etc/hosts
    fi
}

# Flush the local DNS cache
flush_dns_cache() {
    local verbosity="$1"

    if [ "$verbosity" -ne 0 ]; then
        printf "Flushing of local DNS cache\n"
    fi

    killall -HUP mDNSResponder
}

# Check if it is an integer
exit_if_not_integer() {
    local variable="$1"

    if ! echo "$variable" | grep -Eq  "^[0-9]{1}$"; then
        printf "%s: not a integer\n" $variable
        usage
        exit 1
    fi
}

# Main
for arg in "$@"; do
    shift
    case "$arg" in
        "--verbosity")
            set -- "$@" "-v"
            ;;
        "--help")
            set -- "$@" "-h"
            ;;
        "--"*)
            set -- "$@" "-?"
            ;;
        *)
            set -- "$@" "$arg"
    esac
done

while getopts ":v:h" option; do
    case $option in
        v)
            VERBOSITY=$OPTARG
            exit_if_not_integer "$VERBOSITY"
            ;;
        h)
            usage
            exit
            ;;
        :)
            printf "%s: argument required\n" $OPTARG
            exit 1
            ;;
        \?)
            printf "%s: invalid option\n" $OPTARG
            usage
            exit 1
            ;;
    esac
done

if [ "$VERBOSITY" -ne 0 ]; then
    banner
fi

# Create a hard link to /etc/hosts of local machine
hard_link "$VERBOSITY"

# Flush the local DNS cache
flush_dns_cache "$VERBOSITY"
