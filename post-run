#!/bin/sh -u
# -u: Treat unset variables as an error when performing parameter expansion.
# If expansion is attempted on an unset interactive, exits with a non-zero status.
#
# Process executed after application manager execution
#
# author: Loan Lassalle <https://github.com/lassalleloan>

# Source file for creating hard link
HARD_LINK_SRC_FILE="$(sed -En 's/^# HARD_LINK_SRC_FILE=([^ #]+)/\1/p' env.list)"

# Default verbosity level
VERBOSITY="$(sed -En 's/^# VERBOSITY=([0-9]([.][0-9]*)*)$/\1/p' env.list)"

# Display a banner
banner() {
  printf "\n"
  printf "Post-run\n"
}

# Usage of the script
usage() {
  printf "Usage: post-run [--verbosity (0 | 1 | 2)]\n"
  printf "\n"
  printf "Process executed after run-app execution\n"
  printf "\n"
  printf "Version: 1.0.0, build deadbeef\n"
  printf "\n"
  printf "Author:\n"
  printf "  Loan Lassalle - <https://github.com/lassalleloan>\n"
  printf "\n"
  printf "Options:\n"
  printf "  -v, --verbosity (0 | 1 | 2)     Level of verbosity: no ouput, step information, interactive\n"
  printf "  -h, --help                      Help on how to use this script\n"
}

# Create a hard link between /etc/hosts and $HARD_LINK_SRC_FILE
hard_link() {
  local verbosity="$1"

  if [ "$verbosity" -ne 0 ]; then
    printf "Creation of hard link between /etc/hosts and %s\n" "$HARD_LINK_SRC_FILE"
  fi

  is_hard_link=$(stat -f "%l" /etc/hosts)
  if [ "$is_hard_link" -le 1 ]; then
    printf "sudo command is required to create the hard link, please run the following command:\n"
    printf "sudo ln -f %s /etc/hosts\n" "$HARD_LINK_SRC_FILE"
  fi
}

# Flush the local DNS cache
flush_dns_cache() {
  local verbosity="$1"

  if [ "$verbosity" -ne 0 ]; then
    printf "Flushing of local DNS cache\n"
  fi

  if [ "$verbosity" -eq 2 ]; then
    dscacheutil -flushcache
    killall -HUP mDNSResponder
  else 
    dscacheutil -flushcache >/dev/null 2>&1
    killall -HUP mDNSResponder >/dev/null 2>&1
  fi
}

# Check if it is an integer
exit_if_not_integer() {
  local variable="$1"

  if ! echo "$variable" | grep -Eq  "^[0-9]{1}$"; then
    printf "%s: not a integer\n" "$variable"
    usage
    exit 1
  fi
}

# Main
for arg in "$@"; do
  shift
  case "$arg" in
    "--verbosity")
      set -- "$@" "-v"
      ;;
    "--help")
      set -- "$@" "-h"
      ;;
    "--"*)
      set -- "$@" "-?"
      ;;
    *)
      set -- "$@" "$arg"
  esac
done

while getopts ":v:h" option; do
  case $option in
    v)
      VERBOSITY=$OPTARG
      exit_if_not_integer "$VERBOSITY"
      ;;
    h)
      usage
      exit
      ;;
    :)
      printf "%s: argument required\n" "$OPTARG"
      exit 1
      ;;
    \?)
      printf "%s: invalid option\n" "$OPTARG"
      usage
      exit 1
      ;;
  esac
done

if [ "$VERBOSITY" -ne 0 ]; then
  banner
fi

# Create a hard link to /etc/hosts of local machine
hard_link "$VERBOSITY"

# Flush the local DNS cache
flush_dns_cache "$VERBOSITY"
