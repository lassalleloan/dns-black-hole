#!/bin/sh -u
# -u: Treat unset variables as an error when performing parameter expansion.
# If expansion is attempted on an unset interactive, exits with a non-zero status.
#
# Process executed after application manager execution
#
# Author: Loan Lassalle <https://github.com/lassalleloan>

# env.list file based on env.list.example file 
# and filled with your own values is required
if [ ! -f env.list ]; then
  printf "env.list: No such file\n"
  exit 1
fi

# Working directory
WORKING_DIRECTORY="$(sed -En 's/^# WORKING_DIRECTORY=(\/[^ #]+)(( |#)?.*)$/\1/p' env.list)"

# Source file for creating hard link
HARD_LINK_SRC_FILE="$WORKING_DIRECTORY/src/hosts"

# Current and latest version of StevenBlack/hosts source files
CURRENT_VERSION="$(sed -En 's/^# CURRENT_VERSION=([0-9]+([.][0-9]+)*)(( |#).*)?$/\1/p' env.list)"
LATEST_VERSION="$(sed -En 's/^# LATEST_VERSION=([0-9]+([.][0-9]+)*)(( |#).*)?$/\1/p' env.list)"

# Date and time expressed according to ISO 8601 of last update of StevenBlack/hosts source files
FULL_DATE_REGEX="([12]([0-9]{3}))-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])"
FULL_TIME_REGEX="(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])"
DATE_TIME_ISO8601_REGEX="$FULL_DATE_REGEX""T""$FULL_TIME_REGEX""Z"
LAST_LAUNCH_ON="$(sed -En "s/^# LAST_LAUNCH_ON=($DATE_TIME_ISO8601_REGEX)(( |#).*)?$/\1/p" env.list)"
LAST_UPDATE_ON="$(sed -En "s/^# LAST_UPDATE_ON=($DATE_TIME_ISO8601_REGEX)(( |#).*)?$/\1/p" env.list)"

# Default verbosity level
VERBOSITY="$(sed -En 's/^# VERBOSITY=([0-9]{1})(( |#).*)?$/\1/p' env.list)"

# Display a banner
banner() {
  printf "Post-run script\n"
}

# Usage of the script
usage() {
  printf "Usage: post-run [--verbosity (0 | 1 | 2)]\n"
  printf "\n"
  printf "Process executed after run-app execution\n"
  printf "\n"
  printf "Version: 1.0.0, build deadbeef\n"
  printf "\n"
  printf "Author:\n"
  printf "  Loan Lassalle - <https://github.com/lassalleloan>\n"
  printf "\n"
  printf "Options:\n"
  printf "  -v, --verbosity (0 | 1 | 2)     Level of verbosity: no ouput, step information, interactive\n"
  printf "  -h, --help                      Help on how to use this script\n"
}

# Create a hard link between /etc/hosts and $hard_link_src_file
hard_link() {
  local hard_link_src_file="$1"
  local verbosity="$2"

  if [ "$verbosity" -ne 0 ]; then
    printf "Creation of hard link between /etc/hosts and %s\n" "$hard_link_src_file"
  fi

  local is_hard_link=$(stat -f "%l" /etc/hosts)
  if [ "$is_hard_link" -le 1 ]; then
    printf "sudo command is required to create the hard link, please run the following command:\n"
    printf "sudo ln -f %s /etc/hosts\n" "$hard_link_src_file"
  fi
}

# Flush the local DNS cache
flush_dns_cache() {
  local verbosity="$1"

  if [ "$verbosity" -ne 0 ]; then
    printf "Flushing of local DNS cache\n"
  fi

  if [ "$verbosity" -eq 2 ]; then
    killall -HUP mDNSResponder
  else 
    killall -HUP mDNSResponder >/dev/null 2>&1
  fi
}

# Check if it is an integer
exit_if_not_integer() {
  local variable="$1"

  if ! echo "$variable" | grep -Eq  "^[0-9]{1}$"; then
    printf "%s: not a integer\n" "$variable"
    usage
    exit 1
  fi
}

# Main
for arg in "$@"; do
  shift
  case "$arg" in
    "--verbosity")
      set -- "$@" "-v"
      ;;
    "--help")
      set -- "$@" "-h"
      ;;
    "--"*)
      set -- "$@" "-?"
      ;;
    *)
      set -- "$@" "$arg"
  esac
done

while getopts ":v:h" option; do
  case $option in
    v)
      VERBOSITY=$OPTARG
      exit_if_not_integer "$VERBOSITY"
      ;;
    h)
      usage
      exit
      ;;
    :)
      printf "%s: argument required\n" "$OPTARG"
      exit 1
      ;;
    \?)
      printf "%s: invalid option\n" "$OPTARG"
      usage
      exit 1
      ;;
  esac
done

if [ "$VERBOSITY" -ne 0 ]; then
  banner
fi

# Create a hard link to /etc/hosts of local machine
hard_link "$HARD_LINK_SRC_FILE" "$VERBOSITY"

# Flush the local DNS cache
flush_dns_cache "$VERBOSITY"

# Edit CURRENT_VERSION, LAST_LAUNCH_ON & LAST_UPDATE_ON variables in env.list file
sed -i '' -E "/^# CURRENT_VERSION=$CURRENT_VERSION(( |#).*)?$/ s/$CURRENT_VERSION/$LATEST_VERSION/" env.list
sed -i '' -E "/^# LAST_LAUNCH_ON=$LAST_LAUNCH_ON(( |#).*)?$/ s/$LAST_LAUNCH_ON/$(date -u +%FT%TZ)/" env.list
sed -i '' -E "/^# LAST_UPDATE_ON=$LAST_UPDATE_ON(( |#).*)?$/ s/$LAST_UPDATE_ON/$(date -u +%FT%TZ)/" env.list

# To avoid exit 1 of the DNS cache flushing
exit 0
